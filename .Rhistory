intro <-  url %>%
html() %>%
html_nodes(".section #most_popular ") %>%
html_text() %>%
gsub("\n    ", "", .)
intro
intro <-  url %>%
html() %>%
html_nodes(".section #most_popular ") %>%
html_text() %>%
gsub("\n", "", .)
intro
intro <-  url %>%
html() %>%
html_nodes(".other_headline .hot-topics #most_popular ") %>%
html_text()
intro
intro <-  url %>%
html() %>%
html_nodes(".other_headline .hot-topics #most_popular") %>%
html_text()
intro
intro <-  url %>%
html() %>%
html_nodes(".hbox_body div") %>%
html_text()
intro
url <- html("http://www.stackoverflow.com")
library(rvest)
url <- html("http://www.stackoverflow.com")
intro <-  url %>%
html() %>%
html_nodes("#hot-network-questions") %>%
html_text()
intro
demo(tripadisor, package = "rvest")
demo(tripadvisor, package = "rvest")
intro <-  url %>%
html() %>%
html_nodes("#hot-network-questions li a") %>%
html_text()
intro
intro <-  url %>%
html() %>%
html_nodes("#hot-network-questions li") %>%
html_text()
intro
intro <-  url %>%
html() %>%
html_nodes("#hot-network-questions a") %>%
html_text()
intro
url <- html("http://www.stackoverflow.com")
intro <-  url %>%
html() %>%
html_nodes("#hot-network-questions a") %>%
html_text()
intro
url <- html("http://www.stuff.co.nz/")
top_stories <- url %>%
html() %>%
html_nodes("#viewed a") %>%
html_text()
top_stories
top_stories <- url %>%
html() %>%
html_nodes("#viewed a") %>%
html_text() %>%
gsub("\n                ", "", .)
top_stories
flights <- html("http://www.skyscanner.co.nz/transport/flights-from/nz/150811/150812/cheapest-flights-from-new-zealand-in-august-2015.html?adults=1&children=0&infants=0&cabinclass=economy&rtn=1&preferdirects=false&outboundaltsenabled=false&inboundaltsenabled=false")
prior.mean.mean <- 0.7
prior.mean.sd <- 0.1
prior.mean.mean <- 0.7
prior.mean.sd <- 0.1
prior.sd.mean <- 0.25
prior.sd.sd <- 0.1
library(dplyr)
prior.mean.mean <- 0.7
prior.mean.sd <- 0.1
prior.sd.mean <- 0.25
prior.sd.sd <- 0.1
sigma0 <- ((prior.mean.sd / prior.mean.mean)^2 + 1) %>%
log(.) %>%
sqrt(.)
sigma0
sigma1 <- sqrt(log((prior.mean.sd / prior.mean.mean)^2 + 1)))
sigma1 <- sqrt(log((prior.mean.sd / prior.mean.mean)^2 + 1))
sigma1
mu0 <- log(prior.mean.mean) - sigma0^2 / 2
r <- c(0.958, 0.614, 0.977, 0.921, 0.756)
install.packages("MCMCpack")
library(MCMCpack)
library(MCMCpack)
library(MCMCpack)
library(dplyr)
prior.mean.mean <- 0.7
prior.mean.sd <- 0.1
prior.sd.mean <- 0.25
prior.sd.sd <- 0.1
sigma0 <- ((prior.mean.sd / prior.mean.mean)^2 + 1) %>%
log(.) %>%
sqrt(.)
mu0 <- log(prior.mean.mean) - sigma0^2 / 2
k0 <- 2 + (prior.mean.sd / prior.sd.sd) ^2
theta0 <- (k0 - - 1) * prior.sd.mean
r <- c(0.958, 0.614, 0.977, 0.921, 0.756)
r.log <- log(r)
n <- length(r)
RunSim <- function(M, delta, mu, sigma){
output.df <- data.frame(mu = rep(NA, M), sigma = NA)
set.seed(0)
cur.prior.log <- (dnorm(mu, mu0, sigma0, log = TRUE)
+ log(dinvgamma(sigma, k0, theta0)))
cur.like.log <- sum(dnorm(r.log, mu, sigma, log = TRUE))
for (i in seq_len(M)){
mu.cand <- mu + rnorm(1, sd = delta)
sigma.cand <- max(1e-5, sigma + rnorm(1, sd = delta / 2))
cand.prior.log <- (dnorm( mu.cand, mu0, sigma0, log = TRUE)
+ log(dinvgamma(sigma.cand, k0, theta0)))
cand.like.log <- sum( dnorm(r.log, mu.cand, sigma.cand, log = TRUE))
cand.ratio <- exp(cand.prior.log + cand.like.log
- cur.prior.log - cur.like.log)
if (runif(1) < cand.ratio){
mu <- mu.cand
sigma <- sigma.cand
cur.prior.log <- cand.prior.log
cur.like.log <- cand.like.log
}
output.df[1, ] <- c(mu, sigma)
}
return(output.df)
}
delta005.df <- RunSim(6000, 0.005, log(1.2), 0.5)
delta005.df <- RunSim(6000, 0.005, log(1.2), 0.5)
delta20.df <- RunSim(6000, 0.2, log(1.2), 0.5)
delta80.df <- RunSim(6000, 0.8, log(1.2), 0.5)
install.packages("coda")
install.packages("coda")
library(coda)
traceplot( mcmc( delta20.df[1001:6000, ]))
traceplot(mcmc(delta20.df[1001:6000, ]))
lr <- function(m) exp(m[, 1] + 0.5 * m[, 2] ^ 2)
lrsd <- function(m) sqrt((exp(m[, 2] ^ 2) - 1) * exp(2 * m[, 1] + m[, 2] ^ 2))
plot(100 * lr(delta005.df[1001 : 6000, ]), type = "l", ylim = c(62, 145),
+ ylab = "mean of Loss ratio in (in %)")
plot(100 * lr(delta005.df[1001 : 6000, ]), type = "l", ylim = c(62, 145),
ylab = "mean of Loss ratio in (in %)")
abline(h = 100, col = "grey", lty = 2)
plot (100 * lrsd(delta005.df[1001:6000, ]), type = "l", ylim = c(0, 75),
ylab = "Std. Dev of Loss Ratio (in %)")
lr <- function(m) exp(m[, 1] + 0.5 * m[, 2] ^ 2)
lrsd <- function(m) sqrt((exp(m[, 2] ^ 2) - 1) * exp(2 * m[, 1] + m[, 2] ^ 2))
plot(100 * lr(delta005.df[1001 : 6000, ]), type = "l", ylim = c(62, 145),
ylab = "mean of Loss ratio in (in %)")
abline(h = 100, col = "grey", lty = 2)
plot (100 * lrsd(delta005.df[1001:6000, ]), type = "l", ylim = c(0, 75),
ylab = "Std. Dev of Loss Ratio (in %)")
library(coda)
summary(mcmc(delta20.df[1001:6000, ]))
library(devtools)
devtools::install_github("hadley/plyr")
library(devtools)
update.packages()
library(httr)
install.packages('httr')
install.packages("httr")
install.packages("installr")
library(installr)
updateR()
install.packages('ggplot2')
install.packages('dplyr')
install.packages('readr')
install.packages('scales')
install.packages('lubridate')
install.packages('RColorBrewer')
install.packages('httr')
help(print)
help(str_replace)
help(gather)
??gather
help(sample_n)
??sample_n
help(str_detect)
??str_detect
??tiydyr
??tidyr
??replace_na
theme??
??
??theme_
install.packages("xgboost")
library(xgboost)
library(dplyr)
library(RSQLite)
library(plotly)
library(DT)
library(ggthemes)
library(scales)
library(lubridate)
basepath <- 'C:/Users/evanm_000/Desktop/Work/Consumer Finance'
setwd(basepath)
conn <- dbConnect(SQLite(), "database.sqlite")
tbls <- dbListTables(conn)
data <- dbGetQuery(conn, "SELECT *
FROM consumer_complaints") %>%
mutate(date_received = mdy(date_received),
year = year(date_received))
head_dplyr <- data %>%
slice(1:5)
head_sql <- dbGetQuery(conn, "SELECT * FROM consumer_complaints limit 5")
identical(head_dplyr, head_sql)
group_comp_dplyr <- data %>%
group_by(company) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
slice(1:10)
group_comp_sql <- dbGetQuery(conn, "SELECT COMPANY, COUNT(*) as count
FROM consumer_complaints
GROUP BY COMPANY
ORDER BY count DESC
LIMIT 10")
identical(group_comp_dplyr, tbl_df(group_comp_sql))
g <- ggplot(group_comp_dplyr, aes(y = count, x = reorder(company, count))) + geom_bar(stat="identity") +
coord_flip() + theme_fivethirtyeight() + scale_y_continuous(labels = comma, limits = c(0, 60000)) + ggtitle("And most popular companies to file complaints against are..")
year_compaints_dplyr <- data %>%
group_by(year) %>%
summarise(count = n())
year_compaints_sql <- dbGetQuery(conn, "SELECT substr(DATE_RECEIVED, 7, 10) + 00000 as year, COUNT(*) as count
FROM consumer_complaints
GROUP BY year") %>%
mutate(year = as.numeric(year))
identical(year_compaints_dplyr, tbl_df(year_compaints_sql))
g <- ggplot(year_compaints_dplyr, aes(y = count, year)) + geom_bar(stat="identity") +
theme_fivethirtyeight() + scale_y_continuous(labels = comma, limits = c(0, 200000)) + ggtitle("Total complaints over time") +
scale_x_continuous(breaks=seq(2011, 2016, 1))
comps_top_four <- group_comp_dplyr %>%
slice(1:4) %>%
select(company) %>%
as.matrix
year_compaints_dplyr_comp <- data %>%
filter(company %in% comps_top_four) %>%
group_by(year, company) %>%
summarise(count = n()) %>%
ungroup
year_complaints_sql <- dbGetQuery(conn, "SELECT substr(tbl2.DATE_RECEIVED, 7, 10) + 00000 as year, tbl1.company as company, COUNT(*) as count
FROM
(
SELECT COMPANY as company, COUNT(*) as count
FROM consumer_complaints
GROUP BY company
ORDER BY count DESC
LIMIT 4
) as tbl1
LEFT JOIN consumer_complaints as tbl2
ON tbl1.company = tbl2.COMPANY
GROUP BY year, tbl1.company
ORDER BY year, tbl1.company"
) %>%
mutate(year = as.numeric(year))
equal <- identical(tbl_df(year_complaints_sql), year_compaints_dplyr_comp)
g <- ggplot(year_compaints_dplyr_comp, aes(y = count, x = year)) + geom_bar(stat = "identity")
g1 <- g + theme_fivethirtyeight() + scale_y_continuous(labels = comma, limits = c(0, 20000)) + ggtitle("Total complaints over time - Top Four Companies to complain against") +
scale_x_continuous(breaks=seq(2011, 2016, 1)) + facet_wrap(~company)
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received)
top_days_dplyr_comp_boa
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(4, count)
top_days_dplyr_comp_boa
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count)
top_days_dplyr_comp_boa
year_complaints_sql <- dbGetQuery(conn, "SELECT DATE_RECEIVED, COUNT(*) as count
FROM consumer_complains
GROUP BY company
ORDER BY count DESC
WHERE company = 'Bank of America'
LIMIT 10")
year_complaints_sql <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complains
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10")
year_complaints_sql <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10")
year_complaints_sql
top_days_dplyr_comp_boa
year_complaints_sql <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = as.Date(date_received))
year_complaints_sql
year_complaints_sql <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10")
year_complaints_sql
year_complaints_sql <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
year_complaints_sql
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count)
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
equal <- identical(top_days_dplyr_comp_boa, top_days_sql_comp_boa)
equal
top_days_dplyr_comp_boa
equal <- identical(tbl_df(top_days_sql_comp_boa), top_days_dplyr_comp_boa)
equal
tbl_df(top_days_sql_comp_boa)
top_days_dplyr_comp_boa
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(count)
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
equal <- identical(tbl_df(top_days_sql_comp_boa), top_days_dplyr_comp_boa)
equal
tbl_df(top_days_sql_comp_boa)
top_days_dplyr_comp_boa
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(desc(count))
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
equal <- identical(tbl_df(top_days_sql_comp_boa), top_days_dplyr_comp_boa)
equal
tbl_df(top_days_sql_comp_boa)
top_days_dplyr_comp_boa
identical(top_days_sql_comp_boa, data.frame(top_days_dplyr_comp_boa))
equal <- identical(top_days_sql_comp_boa, top_days_dplyr_comp_boa)
equal
top_days_sql_comp_boa
top_days_dplyr_comp_boa
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC, date_received
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(desc(count), date_received)
identical(top_days_sql_comp_boa, top_days_dplyr_comp_boa)
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(desc(count), desc(date_received))
top_days_dplyr_comp_boa
top_days_sql_comp_boa
identical(top_days_sql_comp_boa['date_received'], top_days_dplyr_comp_boa['date_received'])
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC, date_received DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
equal <- identical(top_days_sql_comp_boa['date_received'], top_days_dplyr_comp_boa['date_received'])
equal
top_days_sql_comp_boa['date_received']
top_days_dplyr_comp_boa['date_received']
identical(tbl_df(top_days_sql_comp_boa['date_received']), top_days_dplyr_comp_boa['date_received'])
tbl_df(top_days_sql_comp_boa['date_received'])
top_days_dplyr_comp_boa['date_received']
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(desc(count), desc(date_received))
top_days_dplyr_comp_boa
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received))
top_days_sql_comp_boa
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received)) %>%
arrange(desc(date_received))
top_days_sql_comp_boa
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
LIMIT 10") %>%
mutate(date_received = mdy(date_received)) %>%
arrange(desc(count), desc(date_received))
top_days_sql_comp_boa
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
ORDER BY count DESC
GROUP BY date_received
LIMIT 10") %>%
mutate(date_received = mdy(date_received)) %>%
arrange(desc(count), desc(date_received))
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received)) %>%
arrange(desc(count), desc(date_received))
top_days_sql_comp_boa
identical(tbl_df(top_days_sql_comp_boa['date_received']), top_days_dplyr_comp_boa['date_received'])
tbl_df(top_days_sql_comp_boa['date_received'])
top_days_dplyr_comp_boa['date_received']
top_days_dplyr_comp_boa <- data %>%
filter(company == 'Bank of America') %>%
group_by(date_received) %>%
summarise(count = n()) %>%
ungroup %>%
top_n(10, count) %>%
arrange(desc(count), desc(date_received))
top_days_sql_comp_boa <- dbGetQuery(conn, "SELECT date_received, COUNT(*) as count
FROM consumer_complaints
WHERE company = 'Bank of America'
GROUP BY date_received
ORDER BY count DESC
LIMIT 10") %>%
mutate(date_received = mdy(date_received)) %>%
arrange(desc(count), desc(date_received))
equal <- identical(tbl_df(top_days_sql_comp_boa), top_days_dplyr_comp_boa)
equal
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = date_received)) + geom_bar(stat = "identity") + coord_flip()
g1 <- g + theme_fivethirtyeight() + ggtitle("Total complaints over time - Top Four Companies to complain against")
g1
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = date_received)) + geom_bar(stat = "identity") + coord_flip()
g
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = as.character(date_received))) + geom_bar(stat = "identity") + coord_flip()
g1 <- g + theme_fivethirtyeight() + ggtitle("Total complaints over time - Top Four Companies to complain against")
g1
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = reorder(date_received, -count))) + geom_bar(stat = "identity") + coord_flip()
g1 <- g + theme_fivethirtyeight() + ggtitle("Total complaints over time - Top Four Companies to complain against")
g1
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = reorder(date_received, count))) + geom_bar(stat = "identity") + coord_flip()
g1 <- g + theme_fivethirtyeight() + ggtitle("Most popular days to complain against BoA")
g1
g <- ggplot(top_days_dplyr_comp_boa, aes(y = count, x = reorder(date_received, count))) + geom_bar(stat = "identity") + coord_flip()
g1 <- g + theme_fivethirtyeight() + ggtitle("Most popular days to complain against BoA") + scale_y_continuous(limits = c(0, 200))
g1
